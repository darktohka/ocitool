name: Build image

on:
  schedule:
    - cron: '0 0 * * 0'
  push:
  workflow_dispatch:
  repository_dispatch:

jobs:
  build-x86_64:
    runs-on: ubuntu-latest
    steps:
      - name: Install Cross
        run: |
          curl -SsL https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash
          cargo binstall cross
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build the binary for x86_64
        run: RUSTFLAGS="-C target-feature=+crt-static" ~/.cargo/bin/cross build --profile release-lto --target x86_64-unknown-linux-gnu
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: binary-x86_64
          path: target/x86_64-unknown-linux-gnu/release-lto/ocitool
      - name: Upload to S3
        run: |
          mv target/x86_64-unknown-linux-gnu/release-lto/ocitool ocitool-x86_64
          docker run --rm -v $(pwd):/s3 d3fk/s3cmd put /s3/ocitool-x86_64 s3://${{ secrets.AWS_BUCKET }}/ --access_key ${{ secrets.AWS_ACCESS_KEY_ID }} --secret_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --region ${{ secrets.AWS_REGION }} --host ${{ secrets.AWS_ENDPOINT }} --host-bucket ${{ secrets.AWS_ENDPOINT }}

  build-arm64:
    runs-on: ubuntu-latest
    steps:
      - name: Install Cross
        run: |
          curl -SsL https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash
          cargo binstall cross
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build the binary for arm64
        run: RUSTFLAGS="-C target-feature=+crt-static" ~/.cargo/bin/cross build --profile release-lto --target aarch64-unknown-linux-gnu
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: binary-aarch64
          path: target/aarch64-unknown-linux-gnu/release-lto/ocitool
      - name: Upload to S3
        run: |
          mv target/aarch64-unknown-linux-gnu/release-lto/ocitool ocitool-aarch64
          docker run --rm -v $(pwd):/s3 d3fk/s3cmd put /s3/ocitool-aarch64 s3://${{ secrets.AWS_BUCKET }}/ --access_key ${{ secrets.AWS_ACCESS_KEY_ID }} --secret_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --region ${{ secrets.AWS_REGION }} --host ${{ secrets.AWS_ENDPOINT }} --host-bucket ${{ secrets.AWS_ENDPOINT }}

  build-armv7:
    runs-on: ubuntu-latest
    steps:
      - name: Install Cross
        run: |
          curl -SsL https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash
          cargo binstall cross
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build the binary for armv7
        run: RUSTFLAGS="-C target-feature=+crt-static" ~/.cargo/bin/cross build --profile release-lto --target armv7-unknown-linux-gnueabihf
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: binary-armv7
          path: target/armv7-unknown-linux-gnueabihf/release-lto/ocitool
      - name: Upload to S3
        run: |
          mv target/armv7-unknown-linux-gnu/release-lto/ocitool ocitool-armv7l
          docker run --rm -v $(pwd):/s3 d3fk/s3cmd put /s3/ocitool-armv7l s3://${{ secrets.AWS_BUCKET }}/ --access_key ${{ secrets.AWS_ACCESS_KEY_ID }} --secret_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --region ${{ secrets.AWS_REGION }} --host ${{ secrets.AWS_ENDPOINT }} --host-bucket ${{ secrets.AWS_ENDPOINT }}

  build-image:
    runs-on: ubuntu-latest
    needs: [build-x86_64, build-arm64, build-armv7]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
      - name: Set executable permissions
        run: |
          chmod +x */ocitool
      - name: Push the image
        run: |
          ./binary-x86_64/ocitool --username ${{ secrets.DOCKER_USERNAME }} --password ${{ secrets.DOCKER_PASSWORD }}